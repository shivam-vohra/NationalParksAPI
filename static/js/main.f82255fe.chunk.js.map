{"version":3,"sources":["logo.svg","img/nationalpark.jpg","Option.js","Home.js","Select.js","Images.js","App.js","reportWebVitals.js","index.js"],"names":["Option","props","type","checked","isSelected","onChange","label","Home","history","useHistory","useState","activities","setActivities","parks","setParks","table","setTable","useEffect","fetch","headers","then","response","json","data","transformed","namesToIds","undefined","length","map","id","name","value","forEach","element","gatherInfo","allParks","activity","push","buttonFormat","cell","row","url","buttonState","color","idleText","animation","onClick","window","open","handleSubmit","style","backgroundImage","bgimg","backgroundPosition","backgroundSize","backgroundRepeat","width","height","display","boxSizing","justifyContent","alignItems","marginLeft","padding","marginBottom","backgroundColor","borderRadius","boxShadow","class","options","isMulti","closeMenuOnSelect","hideSelectedOptions","components","selection","resultString","console","log","substr","request","placeholder","flex","flexDirection","newSchedule","striped","hover","tableStyle","bodyStyle","wordBreak","isKey","dataField","overflowY","dataFormat","marginTop","marginRight","Select","textAlign","alignSelf","shadow","ButtonGroup","Images","setDisplay","namesToCodes","fullName","parkCode","imgs","setImgs","code","buttonUrl","src","alt","pop","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f82255fe.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/nationalpark.8ed3c72a.jpg\";","import { components } from \"react-select\";\r\n\r\nconst Option = (props) => {\r\n  return (\r\n    <div>\r\n      <components.Option {...props}>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={props.isSelected}\r\n          onChange={() => null}\r\n        />{\" \"}\r\n        <label>{props.label}</label>\r\n      </components.Option>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Option;","import React, {useEffect, useState} from \"react\";\r\nimport bgimg from './img/nationalpark.jpg';\r\nimport { default as ReactSelect } from \"react-select\";\r\nimport Option from \"./Option\";\r\nimport { BootstrapTable, TableHeaderColumn, BootstrapButton } from \"react-bootstrap-table\";\r\nimport ReactiveButton from 'reactive-button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-bootstrap-table/dist/react-bootstrap-table.min.css';\r\nimport { useHistory } from \"react-router\";\r\n\r\n\r\nconst Home = () => {\r\n\r\n    let history = useHistory();\r\n\r\n    const [activities, setActivities] = useState([])\r\n    const [parks, setParks] = useState([]);\r\n    const [table, setTable] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://developer.nps.gov/api/v1/activities?api_key=YRuS1eUnETXxpwXCIQ3XkUqViRS2EOYVAHRB8rPj\", {\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        }).then(response => response.json().then(data => setActivities(data)))\r\n    }, []);\r\n\r\n\r\n    let transformed = [];\r\n    let namesToIds = {};\r\n    if (activities[\"data\"] != undefined && activities[\"data\"].length > 0) {\r\n        transformed = activities[\"data\"].map(({ id, name }) => ({ label: name, value: id }));\r\n        transformed.forEach(element => {\r\n            namesToIds[element[\"label\"]] = element[\"value\"];\r\n        });\r\n    }\r\n\r\n    const addToSelected = (selection) => {\r\n        let resultString = \"\";\r\n        selection.forEach(element => {\r\n            console.log(element);\r\n            resultString += namesToIds[element[\"label\"]] + \",\";\r\n        });\r\n        resultString = resultString.substr(0, resultString.length - 1);\r\n        let request = `https://developer.nps.gov/api/v1/activities/parks?id=${resultString}&api_key=YRuS1eUnETXxpwXCIQ3XkUqViRS2EOYVAHRB8rPj`\r\n        console.log(resultString);\r\n        if (resultString.length > 0) {\r\n            fetch(request, {\r\n                        headers : {\r\n                            'Content-Type': 'application/json',\r\n                            'Accept': 'application/json'\r\n                        }\r\n                    }).then(response => response.json().then(data => setParks(gatherInfo(data))));\r\n        } else {\r\n            setParks([]);\r\n        }\r\n    }\r\n\r\n    const gatherInfo = (parks) => {\r\n        let allParks = [];\r\n        let totalParks = parks[\"data\"];\r\n        totalParks.forEach(element => {\r\n            let activity = element[\"name\"];\r\n            element[\"parks\"].forEach(element => {\r\n                element[\"activity\"] = activity;\r\n                element[element[\"url\"]] = <button>Press Me</button>\r\n                allParks.push(element);\r\n            });\r\n        });\r\n        return allParks;\r\n    }\r\n\r\n\r\n    const handleSubmit = (url) => {\r\n        window.open(`${url}`);\r\n      }\r\n\r\n    const buttonFormat = (cell, row, url) => {\r\n        return <ReactiveButton \r\n                            buttonState=\"idle\"\r\n                            color=\"green\"\r\n                            idleText=\"Learn More!\"\r\n                            animation={true}\r\n                            onClick={() => handleSubmit(cell)}\r\n                            />\r\n    }\r\n\r\n    const getSchedule = () => {\r\n        console.log(parks);\r\n        if (parks.length > 0) {\r\n            let newSchedule = [];\r\n            newSchedule.push(<BootstrapTable data={parks} striped hover borderRadius=\"1em\" tableStyle={{\r\n                backgroundColor: \"white\"\r\n            }} bodyStyle={{\r\n                wordBreak: \"break-all\"\r\n            }}>\r\n            <TableHeaderColumn isKey dataField='states'>State</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='fullName'>Park Name</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='parkCode' overflowY=\"scroll\" width=\"5em\">Code</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='url' dataFormat={buttonFormat} width=\"10em\">Learn More</TableHeaderColumn>\r\n            </BootstrapTable>);\r\n            setTable(newSchedule);\r\n        } else {\r\n            setTable([]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{\r\n                backgroundImage: `url(${bgimg})`,\r\n                backgroundPosition: 'center',\r\n                backgroundSize: 'cover',\r\n                backgroundRepeat: 'no-repeat',\r\n                width: '100vw',\r\n                height: '100vh',\r\n                }}>\r\n                    <br></br>\r\n                    \r\n                    <div style={{\r\n                        width: \"85vw\",\r\n                        display: 'inline-flex',\r\n                        boxSizing: \"content-box\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: 'baseline',\r\n                        marginLeft: '5em',\r\n                        padding: '1em',\r\n                        marginBottom: '2em',\r\n                        backgroundColor: 'green',\r\n                        color: '#fff',\r\n                        borderRadius: '10em',\r\n                        boxShadow: '10px 10px 8px #888888'\r\n                    }}>\r\n                        <h1>\r\n                        Welcome to National Parks!\r\n                        </h1>\r\n                    </div>\r\n                    <div style={{\r\n                        marginLeft: \"3em\",\r\n                        \r\n                    }}>\r\n                        \r\n                        <span\r\n                            class=\"d-inline-block\"\r\n                            data-toggle=\"popover\"\r\n                            data-trigger=\"focus\"\r\n                            data-content=\"Please select activitie(s)\"\r\n                        >\r\n                            <ReactSelect\r\n                            options={transformed}\r\n                            isMulti\r\n                            closeMenuOnSelect={false}\r\n                            hideSelectedOptions={false}\r\n                            components={{\r\n                                Option\r\n                            }}\r\n                            onChange={addToSelected}\r\n                            placeholder=\"Select activities...\"\r\n                            />\r\n                            \r\n                        </span>\r\n                    </div>\r\n                    <br></br>\r\n                    <div style={{\r\n                        flex: '1',\r\n                        flexDirection: 'row',\r\n                        justifyContent: 'space-between'\r\n                    }}>\r\n                        <ReactiveButton \r\n                            buttonState=\"idle\"\r\n                            style={{\r\n                                marginLeft: \"3.5em\"\r\n                            }}\r\n                            color=\"green\"\r\n                            idleText=\"Show Parks!\"\r\n                            animation={true}\r\n                            onClick={getSchedule}\r\n                            />\r\n                        <ReactiveButton buttonState=\"idle\"\r\n                            style={{\r\n                                marginLeft: \"6.5em\",\r\n                            }}\r\n                            color=\"red\"\r\n                            idleText=\"Back\"\r\n                            animation={true}\r\n                            onClick={() => {history.push(\"/\")}}\r\n                            />\r\n                    </div>\r\n                    <div style={{\r\n                                overflowY: \"scroll\",\r\n                                height: \"320px\",\r\n                                marginLeft: \"3em\",\r\n                                marginTop: \"1.3em\",\r\n                                marginRight: '3em'\r\n                                }}>{table}\r\n                                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from \"react\"\r\nimport bgimg from './img/nationalpark.jpg';\r\nimport ReactiveButton from \"reactive-button\";\r\nimport { Modal } from \"./Modal\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { ButtonGroup } from \"react-bootstrap\";\r\n\r\nconst Select = () => {\r\n\r\n    let history = useHistory();\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div style={{\r\n                backgroundImage: `url(${bgimg})`,\r\n                backgroundPosition: 'center',\r\n                backgroundSize: 'cover',\r\n                backgroundRepeat: 'no-repeat',\r\n                width: '100vw',\r\n                height: '100vh'\r\n            }}>\r\n\r\n                <div style={{\r\n                        width: \"85vw\",\r\n                        display: 'inline-flex',\r\n                        boxSizing: \"content-box\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: 'center',\r\n                        marginLeft: '5em',\r\n                        padding: '1em',\r\n                        marginBottom: '2em',\r\n                        backgroundColor: 'green',\r\n                        color: '#fff',\r\n                        boxShadow: '10px 10px 8px #888888',\r\n                        marginTop: '1em'\r\n                    }}>\r\n                    <text alignItems=\"center\">\r\n                        Welcome to the National Parks! You'll be able to find parks based on your selected activities,\r\n                        and you'll be able to view some pictures from parks as well. Remember to have fun when you search\r\n                        and take in all the options you have to coincide with your desires to explore nature! Be appreciative of\r\n                        the parks throughout the U.S. The U.S. National Park Service oversees these parks, so if you want to learn more,\r\n                        click the button below!\r\n                    </text>\r\n                </div>\r\n\r\n                <div style={{\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    width: '100%',\r\n                    textAlign: 'center'\r\n                }}>\r\n                    <ReactiveButton\r\n                    buttonState=\"idle\"\r\n                    style={{\r\n                        padding: '1em',\r\n                        borderRadius: '1em',\r\n                        alignSelf: 'center'\r\n                    }}\r\n                    color=\"green\"\r\n                    idleText=\"About the U.S. National Park Service\"\r\n                    animation={true}\r\n                    shadow\r\n                    onClick={() => {window.open(\"https://www.nps.gov/index.htm\")}}\r\n                    />\r\n                </div>\r\n\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n\r\n                <div style={{\r\n                    textAlign: 'center',\r\n                    marginRight: '7em'\r\n                }}>\r\n                    <ButtonGroup style={{\r\n                    }}>\r\n                    <ReactiveButton\r\n                        buttonState=\"idle\"\r\n                        style={{\r\n                            padding: '1em',\r\n                            borderRadius: '1em',\r\n                            alignSelf: 'center',\r\n                            marginRight: '4em',\r\n                            marginLeft: '2em'\r\n                        }}\r\n                        color=\"#2E8B57\"\r\n                        idleText=\"Search Parks and Activities\"\r\n                        animation={true}\r\n                        onClick={() => {history.push(\"/home\")}}\r\n                    />\r\n                    \r\n                    <ReactiveButton\r\n                        buttonState=\"idle\"\r\n                        style={{\r\n                            padding: '1em',\r\n                            borderRadius: '1em',\r\n                            alignSelf: 'center',\r\n                            marginLeft: '5em',\r\n                            marginRight: '3em'\r\n                        }}\r\n                        color=\"mediumseagreen\"\r\n                        idleText=\"Search Park Images\"\r\n                        animation={true}\r\n                        onClick={() => {history.push(\"/images\")}}\r\n                    />\r\n                    </ButtonGroup>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Select;","import React, {useEffect, useState} from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport bgimg from './img/nationalpark.jpg';\r\nimport ReactiveButton from \"reactive-button\";\r\nimport { default as ReactSelect } from \"react-select\";\r\nimport Option from \"./Option\";\r\n\r\n/**\r\n * Creates a screen to display images from a selected national park/\r\n * If the park does not contain any images, then an error message is displayed\r\n * and the user is prompted to display.\r\n * @returns Functional component of images\r\n */\r\nconst Images = () => {\r\n    \r\n    // Set history for navigation and search\r\n    let history = useHistory();\r\n    let search = \"\";\r\n\r\n\r\n    const handleChange = (e) => {\r\n        search = e.target.value;\r\n    } \r\n\r\n    const [parks, setParks] = useState([]);\r\n    const [display, setDisplay] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://developer.nps.gov/api/v1/parks?limit=500&api_key=YRuS1eUnETXxpwXCIQ3XkUqViRS2EOYVAHRB8rPj\", {\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        }).then(response => response.json().then(data => setParks(data[\"data\"])))\r\n    }, [])\r\n\r\n    console.log(parks);\r\n\r\n    let transformed = [];\r\n    let namesToCodes = {};\r\n    \r\n    transformed = parks.map(({ fullName, parkCode }) => ({ label: fullName, value: parkCode }));\r\n        transformed.forEach(element => {\r\n            namesToCodes[element[\"label\"]] = element[\"value\"];\r\n    });\r\n    console.log(transformed);\r\n\r\n\r\n    const [imgs, setImgs] = useState([]);\r\n\r\n\r\n    const addToSelected = (selection) => {\r\n        let displayData = [];\r\n        console.log(selection);\r\n        let code = selection['value'];\r\n        let request = `https://developer.nps.gov/api/v1/webcams?parkCode=${code}&limit=100&api_key=YRuS1eUnETXxpwXCIQ3XkUqViRS2EOYVAHRB8rPj`;\r\n        fetch(request, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        }).then(response => response.json().then(data => setImgs(data)));\r\n        console.log(request);\r\n        console.log(imgs);\r\n    }\r\n\r\n    console.log(imgs);\r\n\r\n\r\n    const displayImgInfo = () => {\r\n        console.log(imgs);\r\n        if (imgs[\"data\"] != undefined) {\r\n            let newSchedule = [];\r\n            if (imgs[\"data\"].length == 0 || (imgs[\"data\"].length == 1 && imgs[\"data\"][0][\"status\"] == \"Inactive\")) {\r\n                console.log(imgs[\"data\"]);\r\n                newSchedule.push(\r\n                    <div>\r\n                    <div style={{\r\n                        boxSizing: 'content-box',\r\n                        color: 'white',\r\n                        boxShadow: '10px 10px 8px #888888',\r\n                        backgroundColor: '#f8546c',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        textAlign: 'center',\r\n                        padding: '7.3em'\r\n                    }}>\r\n                        <h1>Sorry, no images here for this park. Try selecting a different park.</h1>\r\n                        <br></br>\r\n                        <ReactiveButton buttonState=\"idle\"\r\n                            color=\"green\"\r\n                            idleText=\"Click to See Why\"\r\n                            animation={true}\r\n                            onClick={() => {\r\n                                if (imgs[\"data\"].length == 0) {\r\n                                    window.open(\"https://www.nps.gov/index.htm\");\r\n                                } else {\r\n                                    window.open(imgs[\"data\"][0][\"url\"]);\r\n                                }\r\n                            }}\r\n                            />\r\n                    </div>\r\n                    </div>\r\n                );\r\n            } else {\r\n                let count = 0;\r\n                imgs[\"data\"].forEach(element => {\r\n                    if (element[\"images\"].length > 0) {\r\n                        let buttonUrl = element[\"url\"];\r\n                        element[\"images\"].push(element[\"images\"][0])\r\n                        element[\"images\"].forEach(url => {\r\n                            newSchedule.push(\r\n                                <div>\r\n                                <img\r\n                                src={url[\"url\"]}\r\n                                alt=\"new\"\r\n                                width=\"60%\"\r\n                                height=\"60%\"\r\n                                />\r\n                                <ReactiveButton buttonState=\"idle\"\r\n                                style={{\r\n                                    marginLeft: \"2em\",\r\n                                    marginRight: '2em'\r\n                                }}\r\n                                color=\"green\"\r\n                                idleText=\"More Information\"\r\n                                animation={true}\r\n                                onClick={() => window.open(buttonUrl)}\r\n                                />\r\n                                </div>\r\n                            );\r\n                            newSchedule.push(<br></br>);\r\n                        });\r\n                    }\r\n                    newSchedule.pop();\r\n                });\r\n            }\r\n            setDisplay(newSchedule);\r\n        } else {\r\n            console.log(\"still empty bro bro\")\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <div style={{\r\n                    backgroundImage: `url(${bgimg})`,\r\n                    backgroundPosition: 'center',\r\n                    backgroundSize: 'cover',\r\n                    backgroundRepeat: 'no-repeat',\r\n                    width: '100vw',\r\n                    height: '100vh',\r\n                }}>\r\n\r\n                <br></br>\r\n\r\n\r\n                <div style={{\r\n                    width: '95%',\r\n                    marginLeft: '2em',\r\n                }}>\r\n                    {/* <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter search query for images...\"\r\n                    style={{\r\n                        width: '100%',\r\n                        height: '56px',\r\n                        position: 'relative',\r\n                        borderRadius: '4px',\r\n                        color: '#282828'\r\n                    }}\r\n                    onChange={handleChange}\r\n                    /> */}\r\n                            <ReactSelect\r\n                            options={transformed}\r\n                            closeMenuOnSelect={false}\r\n                            hideSelectedOptions={false}\r\n                            components={{\r\n                                Option\r\n                            }}\r\n                            width=\"500px\"\r\n                            onChange={addToSelected}\r\n                            placeholder=\"Select parks...\"\r\n                            />\r\n                            \r\n                </div>\r\n\r\n                <br></br>\r\n                <div>\r\n                    <ReactiveButton buttonState=\"idle\"\r\n                            style={{\r\n                                marginLeft: \"3em\",\r\n                            }}\r\n                            color=\"green\"\r\n                            idleText=\"Find Images!\"\r\n                            animation={true}\r\n                            onClick={displayImgInfo}\r\n                            />\r\n\r\n                    <ReactiveButton buttonState=\"idle\"\r\n                            style={{\r\n                                marginLeft: \"6.5em\",\r\n                            }}\r\n                            color=\"red\"\r\n                            idleText=\"Back\"\r\n                            animation={true}\r\n                            onClick={() => {history.push(\"/\")}}\r\n                            />\r\n                </div>\r\n\r\n                \r\n\r\n                <div style={{\r\n                    overflowY: \"scroll\",\r\n                    height: \"400px\",\r\n                    marginLeft: \"3em\",\r\n                    marginTop: \"1.3em\",\r\n                    marginRight: '3em',\r\n                    backgroundColor: 'white',\r\n                }}>\r\n                    {display}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Images;","import logo from './logo.svg';\nimport './App.css';\nimport Home from './Home';\nimport Select from './Select';\nimport {HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Images from './Images';\n\nconst App = () => {\n\n  return (\n    //<Home></Home>\n    //<Select></Select>\n    <Router basename=\"/NationalParksAPI/\">\n      <Switch>\n        <Route exact path=\"/\" component={Select} />\n        <Route exact path=\"/home\" component={Home} />\n        <Route exact path=\"/images\" component={Images} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  //<React.StrictMode>\n    <App />,\n  //</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}